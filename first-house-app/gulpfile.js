// Generated on 2015-09-28 using generator-jhipster 2.21.1
/* jshint camelcase: false */
'use strict';

var gulp = require('gulp'),
    gutil = require('gulp-util'),
    prefix = require('gulp-autoprefixer'),
    minifyCss = require('gulp-minify-css'),
    usemin = require('gulp-usemin'),
    uglify = require('gulp-uglify'),
    sass = require('gulp-sass'),
    htmlmin = require('gulp-htmlmin'),
    imagemin = require('gulp-imagemin'),
    ngAnnotate = require('gulp-ng-annotate'),
    ngConstant = require('gulp-ng-constant-fork'),
    jshint = require('gulp-jshint'),
    rev = require('gulp-rev'),
    es = require('event-stream'),
    flatten = require('gulp-flatten'),
    del = require('del'),
    url = require('url'),
    wiredep = require('wiredep').stream,
    fs = require('fs'),
    runSequence = require('run-sequence'),
    browserSync = require('browser-sync');


var yeoman = {
    app: 'www/',
    dist: 'dist/',
    test: 'test/spec/',
    tmp: '.tmp/',
    importPath: 'www/lib',
    scss: 'scss/',
    port: 9000,
    apiPort: 8080,
    liveReloadPort: 35729
};

gulp.task('clean', function (cb) {
  del([yeoman.dist], cb);
});

gulp.task('clean:tmp', function (cb) {
  del([yeoman.tmp], cb);
});

gulp.task('copy', function() {
    return es.merge( 
              gulp.src(yeoman.app + 'fonts/*.{woff,svg,ttf,eot}').
              pipe(flatten()).
              pipe(gulp.dest(yeoman.dist + 'fonts/')));
});

gulp.task('images', function() {
    return gulp.src(yeoman.app + 'img/**').
        pipe(imagemin({optimizationLevel: 5})).
        pipe(gulp.dest(yeoman.dist + 'img')).
        pipe(browserSync.reload({stream: true}));
});

gulp.task('sass', function () {
    // return gulp.src(yeoman.scss + '**/*.scss')
    //     .pipe(sass({includePaths:yeoman.importPath}).on('error', sass.logError))
    //     .pipe(gulp.dest(yeoman.app + 'css'));
});

gulp.task('styles', ['sass'], function() {
    return gulp.src(yeoman.app + 'css/**/*.css').
        pipe(gulp.dest(yeoman.tmp)).
        pipe(browserSync.reload({stream: true}));
});


gulp.task('watch', function() {
    gulp.watch('bower.json', ['wiredep:app']);
    gulp.watch(['gulpfile.js'], ['ngconstant:dev']);
    gulp.watch(yeoman.scss + '**/*.scss', ['styles']);
    gulp.watch(yeoman.app + 'img/**', ['images']);
    gulp.watch([yeoman.app + '*.html', yeoman.app + 'js/**', yeoman.app + 'templates/**']).on('change', browserSync.reload);
});

gulp.task('serve', function() {
    runSequence('wiredep:app', 'ngconstant:dev', 'sass', 'watch');
});

gulp.task('wiredep', ['wiredep:app']);

gulp.task('wiredep:app', function () {
    var s = gulp.src('www/index.html')
        .pipe(wiredep())
        .pipe(gulp.dest('www'));
    return s;
});

gulp.task('build', function () {
    runSequence('clean', 'copy', 'wiredep:app', 'ngconstant:prod', 'usemin');
});

gulp.task('usemin', function() {
    runSequence('images', 'styles', function () {
        return gulp.src([yeoman.app + '**/*.html', '!' + yeoman.app + 'lib/**/*.html']).
            pipe(usemin({
                css: [
                    prefix.apply(),
                    minifyCss({root: 'www'}),  // Replace relative paths for static resources with absolute path with root
                    'concat', // Needs to be present for minifyCss root option to work
                    rev()
                ],
                html: [
                    htmlmin({collapseWhitespace: true})
                ],
                js: [
                    ngAnnotate(),
                    uglify(),
                    'concat',
                    rev()
                ]
            })).
            pipe(gulp.dest(yeoman.dist));
    });
});

gulp.task('ngconstant:dev', function() {
    return ngConstant({
        dest: 'app.constants.js',
        name: 'firstHouseApp',
        deps:   false,
        noFile: true,
        interpolate: /\{%=(.+?)%\}/g,
        wrap: '/* jshint quotmark: false */\n"use strict";\n// DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n{%= __ngModule %}',
        constants: {
            ENV: 'dev',
            VERSION: 1.0
        }
    })
    .pipe(gulp.dest(yeoman.app + 'js/'));
});

gulp.task('ngconstant:prod', function() {
    return ngConstant({
        dest: 'app.constants.js',
        name: 'firstHouseApp',
        deps:   false,
        noFile: true,
        interpolate: /\{%=(.+?)%\}/g,
        wrap: '/* jshint quotmark: false */\n"use strict";\n// DO NOT EDIT THIS FILE, EDIT THE GULP TASK NGCONSTANT SETTINGS INSTEAD WHICH GENERATES THIS FILE\n{%= __ngModule %}',
        constants: {
            ENV: 'prod',
            VERSION: 1.0
        }
    })
    .pipe(gulp.dest(yeoman.tmp + 'js/'));
});

gulp.task('jshint', function() {
    return gulp.src(['gulpfile.js', yeoman.app + 'js/**/*.js'])
        .pipe(jshint())
        .pipe(jshint.reporter('jshint-stylish'));
});

gulp.task('server', ['serve'], function () {
    gutil.log('The `server` task has been deprecated. Use `gulp serve` to start a server');
});

gulp.task('default', function() {
    runSequence('serve');
});
